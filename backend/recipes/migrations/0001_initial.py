# Generated by Django 4.2.1 on 2023-06-02 08:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingridient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Содержит название ингридиента (макс 150 символов)', max_length=150, unique=True, verbose_name='Название ингридиента')),
                ('measure', models.CharField(help_text='Содержит единицы измерения ингридиента (макс 50 символов)', max_length=50, verbose_name='Единицы измерения ингридиента')),
            ],
            options={
                'verbose_name': 'Ингридиент',
                'verbose_name_plural': 'Ингридиенты',
                'ordering': ('name', 'measure'),
            },
        ),
        migrations.CreateModel(
            name='IngridientRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Содержит количество ингридиента', verbose_name='Количество ингридиента')),
                ('ingridient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingridients', to='recipes.ingridient')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Содержит название рецепта (макс 150 символов)', max_length=150, verbose_name='Название рецепта')),
                ('image', models.ImageField(help_text='Содержит фото рецепта', upload_to='recipes/media/', verbose_name='Фото рецепта')),
                ('description', models.TextField(help_text='Содержит описание рецепта', verbose_name='Описание рецепта')),
                ('cooking_time', models.TimeField(help_text='Содержит время приготовления рецепта', verbose_name='Время приготовления')),
                ('author', models.ForeignKey(help_text='Содержит ссылку на автора рецепта', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта')),
                ('ingridients', models.ManyToManyField(help_text='Содержит список ингридиентов', through='recipes.IngridientRecipe', to='recipes.ingridient', verbose_name='Ингридиенты')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Содержит название тэга (макс 150 символов)', max_length=150, unique=True, verbose_name='Название тэга')),
                ('color', models.CharField(help_text='Содержит цвет тэга в HEX формате', max_length=7, verbose_name='Цвет тэга')),
                ('slug', models.SlugField(help_text='Содержит короткий текст для доступа к тэгу через url', unique=True, verbose_name='Тексты ссылки тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TagRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.tag')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Содержит список тэгов', through='recipes.TagRecipe', to='recipes.tag', verbose_name='Тэги'),
        ),
        migrations.AddField(
            model_name='ingridientrecipe',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='recipes.recipe'),
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.UniqueConstraint(fields=('name', 'author'), name='unique_recipe'),
        ),
    ]
